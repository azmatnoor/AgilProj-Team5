@using Microsoft.AspNetCore.Identity

@inject UserManager<User> userManager;
@inject ApplicationContext context;

@model User
@{
    ViewData["Title"] = "Index";
    string restaurantRoute = "";
    string restaurantName = "";
    if (User.IsInRole("RestaurantOwner"))
    {
        restaurantRoute = context.Restaurants.Single(o => o.Owner.Id == @Model.Id).Id;
        restaurantName = context.Restaurants.Single(o => o.Owner.Id == @Model.Id).Name;
    }
}
@*Profile card*@
<div class="container">
    <div class="row">
        <div class="offset-lg-4 col-lg-4 col-sm-6 col-12 main-section text-center">
            <div class="row">
                <div class="col-lg-12 col-sm-12 col-12 profile-header"></div>
            </div>
            <div class="row user-detail">
                <div class="col-lg-12 col-sm-12 col-12">
                    <img src="https://picsum.photos/200" class="rounded-circle img-thumbnail">
                    <h5>@Model.FirstName @Model.LastName</h5>
                    <p><i class="fa fa-map-marker" aria-hidden="true"></i> @Model.Address</p>
                    <hr>
                    @if (User.IsInRole("RestaurantOwner"))
                    {
                        <a asp-controller="Restaurant" asp-action="Index" asp-route-id="@restaurantRoute" class="btn btn-info btn-sm">@restaurantName</a>
                        <hr>
                    }
                    <span>Description goes here :)</span>
                </div>
            </div>
        </div>
    </div>
</div>

@*Div that will hold the pie chart*@
<div id="chart_div" class="mx-auto text-center"></div>

@section scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        async function drawChart() {
            // Create the data table.
            var fetchData = await fetch("api/pizzas/@Html.Raw(@Model.Id)").then((response) => response.json());
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Type');
            data.addColumn('number', 'Times ordered');
            data.addRows(fetchData.map(d => Array.from(Object.values(d))));

            // Set chart options
            var options = {
                'title': 'Which is my favourite pizza?',
                'legend' : 'left',
                'width': 800,
                'height': 600,
                'is3D' : false
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }
    </script>

}

